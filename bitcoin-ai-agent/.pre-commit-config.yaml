import random
import hashlib

# ... other imports ...

class BitcoinAIAgent:
    # ... existing methods ...

    def create_transaction_psbt(
        self,
        xpub: str,
        recipient_address: str,
        amount_btc: float,
        utxos: List[Dict],
        change_address: Optional[str] = None,
        network: str = "testnet",
        fee_rate: int = 10,
        fee_satoshis: Optional[int] = None,
        manual_selected_utxos: Optional[List[Dict]] = None,
        shuffle_seed: Optional[int] = None,
        avoid_small_change: bool = True,
        rbf: bool = False,
    ) -> Dict:
        """
        Create a PSBT for a transaction with the specified parameters.
        Includes deterministic shuffling of inputs and outputs if a shuffle seed is provided.
        """
        # Shuffle inputs and outputs if a seed is provided
        if shuffle_seed is not None:
            random.seed(shuffle_seed)
            random.shuffle(utxos)

        # Convert amount to satoshis
        amount_satoshis = int(round(amount_btc * 100_000_000))

        # Manual UTXO selection path (explicit list bypasses greedy selection)
        if manual_selected_utxos:
            selected_utxos = manual_selected_utxos
        else:
            selected_utxos = self._select_utxos_vbytes(
                utxos, amount_satoshis, fee_rate, recipient_address, change_address
            )

        # Calculate the total input amount
        total_input = sum(u['amount'] for u in selected_utxos)

        # Determine if we need to fold small change into the fee
        if avoid_small_change and (total_input - amount_satoshis < DUST_THRESHOLD):
            fee_satoshis = fee_satoshis or (fee_rate * self._estimate_vbytes(selected_utxos, recipient_address, change_address is not None) // 1000)
            total_input -= DUST_THRESHOLD  # Adjust total input to account for the folded change

        # Create the PSBT
        psbt = create_transaction_psbt(
            inputs=selected_utxos,
            outputs=[{"address": recipient_address, "amount": amount_satoshis}],
            locktime=0,
            version=2,
            include_global_xpub=False,  # Omit GLOBAL_XPUB
            include_keypaths=False,      # Omit BIP32 keypaths
            rbf=rbf,                     # Enable RBF
            prefer_legacy_witness_utxo=True,  # Prefer WITNESS_UTXO for legacy inputs
        )

        return psbt

    # ... other methods ...